/** 
 * @file PasswordHasher.hpp
 * @brief Заголовочный файл с определением класса PasswordHasher для хеширования паролей.
 * 
 * Этот файл содержит объявление класса PasswordHasher, который предоставляет методы 
 * для генерации хешей паролей с использованием алгоритма SHA-512 и проверки паролей 
 * против существующих хешей.
 */

#pragma once
#include <string>
#include <cstring>
#include <stdexcept>
#include <crypt.h>

namespace utils_sg {

/**
 * @class PasswordHasher
 * @brief Класс для безопасного хеширования и проверки паролей.
 * 
 * Класс предоставляет статические методы для генерации хешей паролей с использованием 
 * случайной соли и проверки соответствия пароля и хеша. Реализация использует 
 * функции из библиотеки crypt (алгоритм SHA-512).
 */
class PasswordHasher {
public:
    /**
     * @brief Генерирует хеш пароля с использованием алгоритма SHA-512.
     * 
     * Метод создает случайную соль и вычисляет хеш пароля с использованием 
     * алгоритма SHA-512 (уровень соли $6$). 
     * 
     * @param password [in] Пароль в виде строки.
     * @return Сгенерированный хеш пароля.
     * @throw std::runtime_error Если произошла ошибка при генерации соли или хешировании.
     */
    static std::string generate_hash(const std::string& password);

    /**
     * @brief Проверяет соответствие пароля и существующего хеша.
     * 
     * Метод сравнивает хеш, вычисленный для заданного пароля, с предоставленным 
     * хешем. Используется для проверки правильности введенного пользователем пароля.
     * 
     * @param password [in] Пароль для проверки.
     * @param hash [in] Хеш пароля, с которым выполняется сравнение.
     * @return true, если пароль соответствует хешу; иначе false.
     */
    static bool validate_password(const std::string& password, const std::string& hash);
};

} // namespace utils_sg